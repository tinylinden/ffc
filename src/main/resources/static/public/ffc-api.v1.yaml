openapi: 3.0.0
info:
  title: Fast and Furious Cinema API
  version: v1
servers:
  - url: "http://localhost:8080/"
    description: "Local development server"
paths:
  /public/movies/{id}/details:
    get:
      summary: Get movie details
      tags:
        - PublicMovies
      operationId: getMovieDetails
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            pattern: "^tt\\d+$"
            example: "tt0232500"
      responses:
        200:
          description: Movie deatails
          content:
            application/vnd.ffc.v1+json:
              schema:
                $ref: '#/components/schemas/MovieDetails'
        400:
          description: If request does not meet API specification
        404:
          description: If no details was found
  /public/movies/{id}/ratings:
    get:
      summary: Get average movie rating
      tags:
        - PublicMovies
      operationId: getAverageRating
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            pattern: "^tt\\d+$"
            example: "tt0232500"
      responses:
        200:
          description: Movie average rating
          content:
            application/vnd.ffc.v1+json:
              schema:
                $ref: '#/components/schemas/AverageRating'
        400:
          description: If request does not meet API specification
    post:
      summary: Set or replace your rating for given movie
      tags:
        - PublicMovies
      operationId: setOrReplaceRating
      security:
        - BasicAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            pattern: "^tt\\d+$"
            example: "tt0232500"
      requestBody:
        required: true
        content:
          application/vnd.ffc.v1+json:
            schema:
              $ref: '#/components/schemas/Rating'
      responses:
        204:
          description: If rating was set or replaced
        400:
          description: If request does not meet API specification
        403:
          description: If unauthorized
  /public/showings:
    get:
      summary: Get showings for given dates
      tags:
        - PublicShowings
      operationId: getShowings
      parameters:
        - name: from
          in: query
          required: true
          schema:
            type: string
            format: date
            example: "2021-12-07"
        - name: to
          in: query
          required: true
          schema:
            type: string
            format: date
            example: "2021-12-08"
      responses:
        200:
          description: Showings for given dates
          content:
            application/vnd.ffc.v1+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShowingsForDate'
        400:
          description: If request does not meet API specification
  /internal/showings/{date}:
    put:
      summary: Set or replace showings for given date
      tags:
        - InternalShowings
      operationId: setOrReplaceShowings
      security:
        - BasicAuth: []
      parameters:
        - name: date
          in: path
          required: true
          schema:
            type: string
            format: date
            example: "2021-12-07"
      requestBody:
        required: true
        content:
          application/vnd.ffc.v1+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Showing'
      responses:
        204:
          description: If screenings were set or replaced
        400:
          description: If request does not meet API specification
        403:
          description: If unauthorized
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
  schemas:
    ShowingsForDate:
      required:
        - date
        - showings
      properties:
        date:
          type: string
          format: date
          example: "2020-12-07"
        showings:
          type: array
          items:
            $ref: '#/components/schemas/Showing'
    Showing:
      required:
        - movie_id
        - start_at
        - ticket_prices
      properties:
        movie_id:
          type: string
          pattern: "^tt\\d+$"
          example: "tt0232500"
        start_at:
          type: string
          pattern: "^\\d{2}:\\d{2}$"
          example: "13:30"
        ticket_price:
          $ref: "#/components/schemas/Price"
    Price:
      required:
        - currency
        - amount
      properties:
        currency:
          type: string
          pattern: "^[A-Z]{3}$"
          example: "EUR"
        amount:
          type: number
          format: double
          example: 4.95
    MovieDetails:
      required:
        - title
        - description
        - release_date
        - runtime
        - imdb_rating
      properties:
        title:
          type: string
          example: "The Fast and the Furious"
        plot:
          type: string
          example: "Los Angeles police officer Brian O'Conner..."
        release_date:
          type: string
          format: date
          example: "2001-06-22"
        runtime:
          type: string
          example: "106 min"
        imdb_rating:
          type: number
          format: double
          example: 6.8
    Rating:
      required:
        - rating
      properties:
        rating:
          type: integer
          minimum: 1
          maximum: 5
          example: 3
    AverageRating:
      required:
        - votes_count
        - average_rating
      properties:
        votes_count:
          type: integer
          example: 102
        average_rating:
          type: number
          format: double
          example: 3.4
